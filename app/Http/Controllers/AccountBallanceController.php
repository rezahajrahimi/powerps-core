<?php
bolt_decrypt( __FILE__ , 'NA2yGa'); return 0;
##!!!##