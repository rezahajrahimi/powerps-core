<?php
bolt_decrypt( __FILE__ , '1HATpz'); return 0;
##!!!##