<?php
bolt_decrypt( __FILE__ , 'eDBWeA'); return 0;
##!!!##