<?php
bolt_decrypt( __FILE__ , 'AkOUt5'); return 0;
##!!!##