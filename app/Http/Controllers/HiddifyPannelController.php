<?php
bolt_decrypt( __FILE__ , 'Jp8boD'); return 0;
##!!!##