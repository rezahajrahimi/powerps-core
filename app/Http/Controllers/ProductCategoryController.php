<?php
bolt_decrypt( __FILE__ , '1vKUhI'); return 0;
##!!!##