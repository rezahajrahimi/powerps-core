<?php
bolt_decrypt( __FILE__ , 'XKtN9M'); return 0;
##!!!##