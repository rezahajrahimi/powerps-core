<?php
bolt_decrypt( __FILE__ , 'kDBrCR'); return 0;
##!!!##