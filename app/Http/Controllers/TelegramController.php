<?php
bolt_decrypt( __FILE__ , 'RUMKWb'); return 0;
##!!!##