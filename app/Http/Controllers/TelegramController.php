<?php
bolt_decrypt( __FILE__ , 'ms0Ds1'); return 0;
##!!!##