<?php
bolt_decrypt( __FILE__ , 'J8Jh8v'); return 0;
##!!!##