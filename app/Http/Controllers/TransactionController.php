<?php
bolt_decrypt( __FILE__ , '6fuDAL'); return 0;
##!!!##