<?php
bolt_decrypt( __FILE__ , 'H1RrFg'); return 0;
##!!!##