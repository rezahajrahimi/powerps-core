<?php
bolt_decrypt( __FILE__ , 'd7y7Dq'); return 0;
##!!!##CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xBdXRoQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXFVzZXJDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcVGVsZWdyYW1Db250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcT3JkZXJDb250cm9sbGVyOwovLyB1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcU2VydmljZVR5cGVDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUHJvZHVjdENhdGVnb3J5Q29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXFByb2R1Y3RDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcU2V0dGluZ0NvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xNYWluTWVudUl0ZW1Db250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUGF5bWVudFR5cGVDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUGF5bWVudE1lbnVJdGVtQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXFRyYW5zYWN0aW9uQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXEdpZnRDYXJkTWVudUl0ZW1Db250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcR2lmdENhcmRDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcU3VwcG9ydENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xGYXFDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcQ2hhbm5lbExvY2tNZW51SXRlbUNvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xDaGFubmVsTG9ja0NvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xQYW5uZWxDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUHJveHlDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcSW5ib3VuZENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xCb3RVc2VyQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXExvZ0NvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xBY2NvdW50QmFsbGFuY2VDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcQXBwbGljYXRpb25Db250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcR2VuZXJhbENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xIaWRkaWZ5UGFubmVsQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXFRlc3RBY2NvdW50Q29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXEJpbGxDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcQ3J5cHRvUGF5bWVudENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xUcmFuc2FjdGlvbkNyeXB0b0NvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xUcmFuc2FjdGlvblNldHRpbmdDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcQWdlbnRQcm9kdWN0Q29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXEFnZW50UGVybWlzc29uQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXEV4ZWN1dGVBcnRpc2FuQ29tbWFuZENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xDcm9uSm9iQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXFJlZmVycmFsU2V0dGluZ0NvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xSZWZlcnJhbFdhbGxldENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xSZWZlcnJhbExvZ3NDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcUmVzZXJ2ZXJkQ29uZmlnQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXEFkdmFuY2VTZXR0aW5nTG9va3VwQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXFdlYkFwcE1lbnVJdGVtQ29udHJvbGxlcjsKdXNlIEFwcFxIdHRwXENvbnRyb2xsZXJzXEJhY2t1cENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xUZWxlZ3JhbVdlYmhvb2tDb250cm9sbGVyOwp1c2UgQXBwXEh0dHBcQ29udHJvbGxlcnNcQ3VzdG9tVGV4dENvbnRyb2xsZXI7CnVzZSBBcHBcSHR0cFxDb250cm9sbGVyc1xCbG9ja2VkVXNlckNvbnRyb2xsZXI7CgoKdXNlIElsbHVtaW5hdGVcSHR0cFxSZXF1ZXN0Owp1c2UgSWxsdW1pbmF0ZVxTdXBwb3J0XEZhY2FkZXNcUm91dGU7CgovKgp8LS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KfCBBUEkgUm91dGVzCnwtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQp8CnwgSGVyZSBpcyB3aGVyZSB5b3UgY2FuIHJlZ2lzdGVyIEFQSSByb3V0ZXMgZm9yIHlvdXIgYXBwbGljYXRpb24uIFRoZXNlCnwgcm91dGVzIGFyZSBsb2FkZWQgYnkgdGhlIFJvdXRlU2VydmljZVByb3ZpZGVyIGFuZCBhbGwgb2YgdGhlbSB3aWxsCnwgYmUgYXNzaWduZWQgdG8gdGhlICJhcGkiIG1pZGRsZXdhcmUgZ3JvdXAuIE1ha2Ugc29tZXRoaW5nIGdyZWF0IQp8CiovClJvdXRlOjpwb3N0KCcvdGVsZWdyYW0vd2ViaG9va3MvaW5ib3VuZCcsIFtUZWxlZ3JhbVdlYmhvb2tDb250cm9sbGVyOjpjbGFzcywgJ2hhbmRsZSddKTsKCi8vIFJvdXRlOjpwcmVmaXgoJ3RlbGVncmFtL3dlYmhvb2tzJyktPmdyb3VwKGZ1bmN0aW9uICgpIHsKLy8gICAgIFJvdXRlOjpwb3N0KCdpbmJvdW5kJywgW1RlbGVncmFtQ29udHJvbGxlcjo6Y2xhc3MsICdpbmJvdW5kJ10pLT5uYW1lKCd0ZWxlZ3JhbS5pbmJvdW5kJyk7Ci8vIH0pOwoKUm91dGU6OnBvc3QoJy9yZWdpc3RlcicsIFtBdXRoQ29udHJvbGxlcjo6Y2xhc3MsICdyZWdpc3RlciddKTsKUm91dGU6OnBvc3QoJy9sb2dpbicsIFtBdXRoQ29udHJvbGxlcjo6Y2xhc3MsICdsb2dpbiddKTsKUm91dGU6OnBvc3QoJy9sb2dvdXQnLCBbQXV0aENvbnRyb2xsZXI6OmNsYXNzLCAnbG9nb3V0J10pOwoKUm91dGU6OnBvc3QoJy9mb3JnZXRQYXNzd29yZCcsIFtBdXRoQ29udHJvbGxlcjo6Y2xhc3MsICdmb3JnZXRQYXNzd29yZCddKTsKUm91dGU6Om1pZGRsZXdhcmUoJ2F1dGg6c2FuY3R1bScpLT5nZXQoJy91c2VyJywgZnVuY3Rpb24gKFJlcXVlc3QgJHJlcXVlc3QpIHsKICAgIHJldHVybiAkcmVxdWVzdC0+dXNlcigpOwp9KTsKCi8vIEFkbWluIFJvdXRlcwpSb3V0ZTo6Z3JvdXAoWydtaWRkbGV3YXJlJyA9PiBbJ2F1dGg6c2FuY3R1bScsICdyZXN0cmljdFJvbGU6YWRtaW4nXV0sIGZ1bmN0aW9uICgpIHsKICAgIC8vIHJ1biBhIGNvbW1hbmQgYnkgYXBpCiAgICBSb3V0ZTo6Z2V0KCcvcnVuLWNvbW1hbmQve25hbWVfb2ZfY29tbWFuZH0nLCBFeGVjdXRlQXJ0aXNhbkNvbW1hbmRDb250cm9sbGVyOjpjbGFzcyk7CiAgICAvLy8KICAgIFJvdXRlOjpnZXQoJ2dldFVzZXJPcmRlci97dXNlcklEfScsIFtPcmRlckNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0VXNlck9yZGVyJ10pOwogICAgLy8gUm91dGU6OmdldCgnZ2V0U2VydmljZVR5cGVzJywgW1NlcnZpY2VUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRTZXJ2aWNlVHlwZXMnXSk7CiAgICAvLyBBZG1pbgogICAgUm91dGU6OnB1dCgnYnV5UHJvZHVjdEJ5QWRtaW4nLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdidXlQcm9kdWN0QnlBZG1pbiddKTsKICAgIFJvdXRlOjpwdXQoJ2NoYW5nZVByb2R1Y3RCeUFkbWluV2l0aFBySUQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdjaGFuZ2VQcm9kdWN0QnlBZG1pbldpdGhQcklEJ10pOwogICAgUm91dGU6OnBvc3QoJ2NoYW5nZUFjdGl2YXRpb25PZkhpZGRpZnlVc2VyQnlBZG1pbicsIFtBZ2VudFByb2R1Y3RDb250cm9sbGVyOjpjbGFzcywgJ2NoYW5nZUFjdGl2YXRpb25PZkhpZGRpZnlVc2VyQnlBZG1pbiddKTsKCiAgICAvLyBiYWNrdXAKICAgIFJvdXRlOjpnZXQoJ2NyZWF0ZUJhY2t1cCcsIFtCYWNrdXBDb250cm9sbGVyOjpjbGFzcywgJ2NyZWF0ZUJhY2t1cCddKTsKICAgIFJvdXRlOjpwb3N0KCdyZXN0b3JlQmFja3VwJywgW0JhY2t1cENvbnRyb2xsZXI6OmNsYXNzLCAncmVzdG9yZUJhY2t1cCddKTsKCgogICAgLy8gVXNlckNvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJ2dldFVzZXJzJywgW1VzZXJDb250cm9sbGVyOjpjbGFzcywgJ2dldFVzZXJzJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWdlbnRzJywgW1VzZXJDb250cm9sbGVyOjpjbGFzcywgJ2dldEFnZW50cyddKTsKICAgIFJvdXRlOjpnZXQoJ2dldE5vcm1hbFVzZXJzJywgW1VzZXJDb250cm9sbGVyOjpjbGFzcywgJ2dldE5vcm1hbFVzZXJzJ10pOwogICAgUm91dGU6OmdldCgnZ2V0VXNlckJ5SWQve2lkfScsIFtVc2VyQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRVc2VyQnlJZCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEFnZW50QnlJZFdpdGhQcm9kdWN0c0FuZFByZW1pc3NvbnMve2lkfScsIFtVc2VyQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBZ2VudEJ5SWRXaXRoUHJvZHVjdHNBbmRQcmVtaXNzb25zJ10pOwogICAgUm91dGU6OnBvc3QoJ2NyZWF0ZVVzZXInLCBbVXNlckNvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlVXNlciddKTsKICAgIFJvdXRlOjpwdXQoJ3VwZGF0ZVVzZXInLCBbVXNlckNvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlVXNlciddKTsKICAgIFJvdXRlOjpkZWxldGUoJ2RlbGV0ZVVzZXInLCBbVXNlckNvbnRyb2xsZXI6OmNsYXNzLCAnZGVsZXRlVXNlciddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEFkbWluVXNlcnMnLCBbVXNlckNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0X2FkbWluX3VzZXJzJ10pOwogICAgUm91dGU6OnBhdGNoKCdjaGFuZ2VVc2VyUm9sZVRvQWRtaW4ve2lkfScsIFtVc2VyQ29udHJvbGxlcjo6Y2xhc3MsICdjaGFuZ2VfdXNlcl9yb2xlX3RvX2FkbWluJ10pOwogICAgUm91dGU6OnBhdGNoKCdjaGFuZ2VBZ2VudFJvbGVUb1VzZXIve2lkfScsIFtVc2VyQ29udHJvbGxlcjo6Y2xhc3MsICdjaGFuZ2VfdXNlcl9yb2xlX3RvX3VzZXInXSk7CgogICAgLy8gR2VuZXJhbENvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJ2dldERhc2hib2FyZEFuYWx5dGljcycsIFtHZW5lcmFsQ29udHJvbGxlcjo6Y2xhc3MsICdnZXREYXNoYm9hcmRBbmFseXRpY3MnXSk7CgogICAgLy8gIFByb2R1Y3RDYXRlZ29yeQogICAgUm91dGU6OmdldCgnZ2V0QWxsUHJvZGN0Q2F0ZWdvcnknLCBbUHJvZHVjdENhdGVnb3J5Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxQcm9kY3RDYXRlZ29yeSddKTsKICAgIFJvdXRlOjpnZXQoJ2dldFByb2RjdFByaWNlJywgW1Byb2R1Y3RDYXRlZ29yeUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0UHJvZGN0UHJpY2UnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRQcm9kY3RQYW5uZWxJRC97bmFtZX0vcGFubmVsSUQnLCBbUHJvZHVjdENhdGVnb3J5Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRQcm9kY3RQYW5uZWxJRCddKTsKICAgIFJvdXRlOjpwb3N0KCdhZGROZXdQcm9kdWN0Q2F0ZWdvcnknLCBbUHJvZHVjdENhdGVnb3J5Q29udHJvbGxlcjo6Y2xhc3MsICdhZGROZXdQcm9kdWN0Q2F0ZWdvcnknXSk7CiAgICBSb3V0ZTo6cG9zdCgnZWRpdFByb2R1Y3RDYXRlZ29yeScsIFtQcm9kdWN0Q2F0ZWdvcnlDb250cm9sbGVyOjpjbGFzcywgJ2VkaXRQcm9kdWN0Q2F0ZWdvcnknXSk7CiAgICBSb3V0ZTo6Z2V0KCdyZUFjdGl2ZVByb2R1Y3RDYXRlZ29yeS97aWR9JywgW1Byb2R1Y3RDYXRlZ29yeUNvbnRyb2xsZXI6OmNsYXNzLCAncmVBY3RpdmVQcm9kdWN0Q2F0ZWdvcnknXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZUFjdGl2ZVByb2R1Y3RDYXRlZ29yeS97aWR9JywgW1Byb2R1Y3RDYXRlZ29yeUNvbnRyb2xsZXI6OmNsYXNzLCAnZGVBY3RpdmVQcm9kdWN0Q2F0ZWdvcnknXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZWxldGVQcm9kdWN0Q2F0ZWdvcnlCeUlEL3tpZH0nLCBbUHJvZHVjdENhdGVnb3J5Q29udHJvbGxlcjo6Y2xhc3MsICdkZWxldGVQcm9kdWN0Q2F0ZWdvcnlCeUlEJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWdlbnRQcm9kdWN0c05vdFNlbGVjdGVkQnlVc2VySUQve3VzZXJJRH0nLCBbUHJvZHVjdENhdGVnb3J5Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRBZ2VudFByb2R1Y3RzTm90U2VsZWN0ZWRCeVVzZXJJRCddKTsKCiAgICAvL1Byb2R1Y3RDb250cm9sbGVyCiAgICBSb3V0ZTo6Z2V0KCdnZXRBY3RpdmVQcm9kdWN0c0J5UHJvZHVjdENhdElEL3tzZWxlY3RlZFByb2R1Y3RDYXRJRH0nLCBbUHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWN0aXZlUHJvZHVjdHNCeVByb2R1Y3RDYXRJRCddKTsKICAgIFJvdXRlOjpwb3N0KCdhZGROZXdQcm9kdWN0RGV0YWlscycsIFtQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdhZGROZXdQcm9kdWN0RGV0YWlscyddKTsKICAgIFJvdXRlOjpnZXQoJ2RlbGV0ZVByb2R1Y3Qve2lkfScsIFtQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdkZWxldGVQcm9kdWN0J10pOwogICAgUm91dGU6OmdldCgnZ2V0TGFzdEJ1eWVyc0J5Q2F0SWRBbmRDb3VudC97aWR9L3tjb3VudH0nLCBbUHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0TGFzdEJ1eWVyc0J5Q2F0SWRBbmRDb3VudCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldENvdW50T2ZQcm9kdWN0U2VsbGVkU3VtbWVyeUJ5Q2F0SUQve2lkfScsIFtQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRDb3VudE9mUHJvZHVjdFNlbGxlZFN1bW1lcnlCeUNhdElEJ10pOwogICAgUm91dGU6OmdldCgnZGVsZXRlUHJvZHVjdEJ5UHJvZHVjdElEL3tpZH0nLCBbUHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZGVsZXRlUHJvZHVjdEJ5UHJvZHVjdElEJ10pOwogICAgUm91dGU6OmdldCgnZ2V0VXNlclByb2R1Y3RzSGlzdG9yeUJ5VXNlcklEV2l0aFBhZ2luYXRpb24ve3VzZXJJZH0nLCBbUHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0VXNlclByb2R1Y3RzSGlzdG9yeUJ5VXNlcklEV2l0aFBhZ2luYXRpb24nXSk7CgogICAgLy9TZXR0aW5ncwogICAgUm91dGU6OmdldCgnZ2V0Qm90U2V0dGluZycsIFtTZXR0aW5nQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRCb3RTZXR0aW5nJ10pOwogICAgUm91dGU6OmdldCgnZ2V0Qm90VG9rZW4nLCBbU2V0dGluZ0NvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0Qm90VG9rZW4nXSk7CiAgICBSb3V0ZTo6cG9zdCgndXBkYXRlQm90U2V0dGluZycsIFtTZXR0aW5nQ29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVCb3RTZXR0aW5nJ10pOwoKICAgIC8vIG1lbnUgaXRlbXMKICAgIFJvdXRlOjpnZXQoJ2dldEFsbE1haW5NZW51SXRlbXMnLCBbTWFpbk1lbnVJdGVtQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxNYWluTWVudUl0ZW1zJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsQWN0aXZhdGVkTWFpbk1lbnVJdGVtcycsIFtNYWluTWVudUl0ZW1Db250cm9sbGVyOjpjbGFzcywgJ2dldEFsbEFjdGl2YXRlZE1haW5NZW51SXRlbXMnXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZUFjdGl2ZU1haW5NZW51SXRlbS97bmFtZX0nLCBbTWFpbk1lbnVJdGVtQ29udHJvbGxlcjo6Y2xhc3MsICdkZUFjdGl2ZU1haW5NZW51SXRlbSddKTsKICAgIFJvdXRlOjpnZXQoJ3JlQWN0aXZlTWFpbk1lbnVJdGVtL3tuYW1lfScsIFtNYWluTWVudUl0ZW1Db250cm9sbGVyOjpjbGFzcywgJ3JlQWN0aXZlTWFpbk1lbnVJdGVtJ10pOwogICAgUm91dGU6OnBvc3QoJ2NoYW5nZU1haW5NZW51QWxpYXNOYW1lJywgW01haW5NZW51SXRlbUNvbnRyb2xsZXI6OmNsYXNzLCAnY2hhbmdlTWFpbk1lbnVBbGlhc05hbWUnXSk7CiAgICBSb3V0ZTo6cG9zdCgnY2hhbmdlTWFpbk1lbnVQb3NpdGlvbicsIFtNYWluTWVudUl0ZW1Db250cm9sbGVyOjpjbGFzcywgJ2NoYW5nZU1haW5NZW51UG9zaXRpb24nXSk7CiAgICBSb3V0ZTo6cG9zdCgncmVvcmRlci1tYWluLW1lbnUtaXRlbXMnLCBbTWFpbk1lbnVJdGVtQ29udHJvbGxlcjo6Y2xhc3MsICdyZW9yZGVyTWFpbk1lbnVJdGVtcyddKTsKCiAgICAvLyBwYXltZW50IHR5cGUKICAgIFJvdXRlOjpnZXQoJ2dldFBheW1lbnRUeXBlcycsIFtQYXltZW50VHlwZUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0UGF5bWVudFR5cGVzJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsQWN0aXZlT2ZmbGluZVBheW1lbnRUeXBlcycsIFtQYXltZW50VHlwZUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWxsQWN0aXZlT2ZmbGluZVBheW1lbnRUeXBlcyddKTsKICAgIFJvdXRlOjpnZXQoJ2dldFBheW1lbnRBZGRyZXNzQnlQYXltZW50TmFtZS97bmFtZX0nLCBbUGF5bWVudFR5cGVDb250cm9sbGVyOjpjbGFzcywgJ2dldFBheW1lbnRBZGRyZXNzQnlQYXltZW50TmFtZSddKTsKICAgIFJvdXRlOjpnZXQoJ2lzUGF5bWVudFR5cGUve25hbWV9JywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdpc1BheW1lbnRUeXBlJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsT25saW5lUGF5bWVudHMnLCBbUGF5bWVudFR5cGVDb250cm9sbGVyOjpjbGFzcywgJ2dldEFsbE9ubGluZVBheW1lbnRzJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsT2ZmbGluZVBheW1lbnRzJywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxPZmZsaW5lUGF5bWVudHMnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRaYXJpbnBhbFBheW1lbnREZXRhaWxzJywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRaYXJpbnBhbFBheW1lbnREZXRhaWxzJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsVHlwZXNPZnBheW1lbnREYXRhJywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxUeXBlc09mcGF5bWVudERhdGEnXSk7CiAgICBSb3V0ZTo6cG9zdCgnY3JlYXRlTmV3UGF5bWVudFR5cGUnLCBbUGF5bWVudFR5cGVDb250cm9sbGVyOjpjbGFzcywgJ2NyZWF0ZU5ld1BheW1lbnRUeXBlJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsQWN0aXZlUGF5bWVudFR5cGVzJywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxBY3RpdmVQYXltZW50VHlwZXMnXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZUFjdGl2ZVBheW1lbnRUeXBlL3tuYW1lfScsIFtQYXltZW50VHlwZUNvbnRyb2xsZXI6OmNsYXNzLCAnZGVBY3RpdmVQYXltZW50VHlwZSddKTsKICAgIFJvdXRlOjpnZXQoJ3JlQWN0aXZlUGF5bWVudFR5cGUve25hbWV9JywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdyZUFjdGl2ZVBheW1lbnRUeXBlJ10pOwogICAgUm91dGU6OmdldCgncmVtb3ZlUGF5bWVudFR5cGUve25hbWV9JywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdyZW1vdmVQYXltZW50VHlwZSddKTsKICAgIFJvdXRlOjpwb3N0KCdjaGFuZWdlTWVyQ2hhbnRJZEJ5UGF5bWVudFR5cGVOYW1lJywgW1BheW1lbnRUeXBlQ29udHJvbGxlcjo6Y2xhc3MsICdjaGFuZWdlTWVyQ2hhbnRJZEJ5UGF5bWVudFR5cGVOYW1lJ10pOwogICAgUm91dGU6OnBvc3QoJ3VwZGF0ZU9mZmxpbmVQYXltZW50VHlwZScsIFtQYXltZW50VHlwZUNvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlX29mZmxpbmVfcGF5bWVudF90eXBlJ10pOwoKICAgIC8vIHBheW1lbnl0IHR5cGUgbWVudQogICAgUm91dGU6OmdldCgnZ2V0UGF5bWVudFR5cGVNYWluTWVudVRpdGxlJywgW1BheW1lbnRNZW51SXRlbUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0UGF5bWVudFR5cGVNYWluTWVudVRpdGxlJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsUGF5bWVudFR5cGVNZW51ZXMnLCBbUGF5bWVudE1lbnVJdGVtQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxQYXltZW50VHlwZU1lbnVlcyddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVQYXltZW50TWVudUFsaXNOYW1lQnlMZXZlbCcsIFtQYXltZW50TWVudUl0ZW1Db250cm9sbGVyOjpjbGFzcywgJ3VwZGF0ZVBheW1lbnRNZW51QWxpc05hbWVCeUxldmVsJ10pOwoKICAgIC8vIFRyYW5zYWN0aW9uQ29udHJvbGxlciAmJiBvbmxpbmUgcGF5bWVudAoKICAgIFJvdXRlOjpnZXQoJy9jaGFuZ2VOb3ZhUGF5bWVudERhdGEnLCBbVHJhbnNhY3Rpb25Db250cm9sbGVyOjpjbGFzcywgJ2NoYW5nZU5vdmFQYXltZW50RGF0YSddKTsKICAgIFJvdXRlOjpnZXQoJy9nZXRDb25maXJtZWRUcmFuc2FjdGlvbnMve2NvdW50P30nLCBbVHJhbnNhY3Rpb25Db250cm9sbGVyOjpjbGFzcywgJ2dldENvbmZpcm1lZFRyYW5zYWN0aW9ucyddKTsKICAgIFJvdXRlOjpnZXQoJy9nZXRVbkNvbmZpcm1lZFRyYW5zYWN0aW9ucy97Y291bnQ/fScsIFtUcmFuc2FjdGlvbkNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0VW5Db25maXJtZWRUcmFuc2FjdGlvbnMnXSk7CiAgICBSb3V0ZTo6Z2V0KCcvcmVtb3ZlVW5jb25maXJtZWRUcmFuc2FjdGlvbi97aWR9JywgW1RyYW5zYWN0aW9uQ29udHJvbGxlcjo6Y2xhc3MsICdyZW1vdmVVbmNvbmZpcm1lZFRyYW5zYWN0aW9uJ10pOwogICAgUm91dGU6OnBvc3QoJy9lZGl0VXNlclRyYW5hY3Rpb24nLCBbVHJhbnNhY3Rpb25Db250cm9sbGVyOjpjbGFzcywgJ2VkaXRVc2VyVHJhbmFjdGlvbiddKTsKCiAgICAvLyBHaWZ0Q2FyZCBtZW51CiAgICBSb3V0ZTo6Z2V0KCdnZXRHaWZ0Q2FyZE1haW5NZW51VGl0bGUnLCBbR2lmdENhcmRNZW51SXRlbUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0R2lmdENhcmRNYWluTWVudVRpdGxlJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWxsR2lmdENhcmRNZW51ZXMnLCBbR2lmdENhcmRNZW51SXRlbUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWxsR2lmdENhcmRNZW51ZXMnXSk7CiAgICBSb3V0ZTo6cG9zdCgndXBkYXRlR2lmdENhcmRNZW51QWxpc05hbWVCeUxldmVsJywgW0dpZnRDYXJkTWVudUl0ZW1Db250cm9sbGVyOjpjbGFzcywgJ3VwZGF0ZUdpZnRDYXJkTWVudUFsaXNOYW1lQnlMZXZlbCddKTsKCiAgICAvLyBHaWZ0Q2FyZAogICAgUm91dGU6OnBvc3QoJ2NyZWF0ZU5ld0dpZnRDYXJkJywgW0dpZnRDYXJkQ29udHJvbGxlcjo6Y2xhc3MsICdjcmVhdGVOZXdHaWZ0Q2FyZCddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVHaWZ0Q2FyZCcsIFtHaWZ0Q2FyZENvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlR2lmdENhcmQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZWxldGVHaWZ0Q2FyZEJ5Q29kZS97Y29kZX0nLCBbR2lmdENhcmRDb250cm9sbGVyOjpjbGFzcywgJ2RlbGV0ZUdpZnRDYXJkQnlDb2RlJ10pOwogICAgUm91dGU6OmdldCgnZ2V0R2lmdENhcmRMaXN0JywgW0dpZnRDYXJkQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRHaWZ0Q2FyZExpc3QnXSk7CgogICAgLy8gc3VwcG9ydAogICAgUm91dGU6OmdldCgnZ2V0U3VwcG9yc3RMaXN0JywgW1N1cHBvcnRDb250cm9sbGVyOjpjbGFzcywgJ2dldFN1cHBvcnN0TGlzdCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldFN1cHBvcnRCeUlkL3tpZH0nLCBbU3VwcG9ydENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0U3VwcG9ydEJ5SWQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZWxldGVTdXBwb3J0QnlJZC97aWR9JywgW1N1cHBvcnRDb250cm9sbGVyOjpjbGFzcywgJ2RlbGV0ZVN1cHBvcnRCeUlkJ10pOwogICAgUm91dGU6OnBvc3QoJ2NyZWF0ZU5ld1N1cHBvcnQnLCBbU3VwcG9ydENvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlTmV3U3VwcG9ydCddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVTdXBwb3J0QnlJZCcsIFtTdXBwb3J0Q29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVTdXBwb3J0QnlJZCddKTsKCiAgICAvL0ZhcQogICAgUm91dGU6OnBvc3QoJ2NyZWF0ZU5ld0ZhYycsIFtGYXFDb250cm9sbGVyOjpjbGFzcywgJ2NyZWF0ZU5ld0ZhYyddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVGYWMnLCBbRmFxQ29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVGYWMnXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZWxldGVGYWNCeUlkL3tpZH0nLCBbRmFxQ29udHJvbGxlcjo6Y2xhc3MsICdkZWxldGVGYWNCeUlkJ10pOwogICAgUm91dGU6OmdldCgnZ2V0RmFxQnlJZC97aWR9JywgW0ZhcUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0RmFxQnlJZCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEZhcUxpc3QnLCBbRmFxQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRGYXFMaXN0J10pOwoKICAgIC8vIGNoYW5uZWwgbG9jayBtZW51CiAgICBSb3V0ZTo6Z2V0KCdnZXRDaGFubmVsTG9ja01haW5NZW51VGl0bGUnLCBbQ2hhbm5lbExvY2tNZW51SXRlbUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0Q2hhbm5lbExvY2tNYWluTWVudVRpdGxlJ10pOwogICAgUm91dGU6OnBvc3QoJ3VwZGF0ZUNoYW5uZWxMb2NrTWVudUFsaXNOYW1lQnlMZXZlbCcsIFtDaGFubmVsTG9ja01lbnVJdGVtQ29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVDaGFubmVsTG9ja01lbnVBbGlzTmFtZUJ5TGV2ZWwnXSk7CgogICAgLy8gY2hhbm5lbCBsb2NrIG1lbnUKICAgIFJvdXRlOjpwb3N0KCdjcmVhdGVOZXdDaGFubmVsTG9jaycsIFtDaGFubmVsTG9ja0NvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlTmV3Q2hhbm5lbExvY2snXSk7CiAgICBSb3V0ZTo6cG9zdCgnZWRpdENoYW5uZWxMb2NrJywgW0NoYW5uZWxMb2NrQ29udHJvbGxlcjo6Y2xhc3MsICdlZGl0Q2hhbm5lbExvY2snXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZUFjdGl2ZUNoYW5uZWxMb2NrQnlJRC97aWR9JywgW0NoYW5uZWxMb2NrQ29udHJvbGxlcjo6Y2xhc3MsICdkZUFjdGl2ZUNoYW5uZWxMb2NrQnlJRCddKTsKICAgIFJvdXRlOjpnZXQoJ3JlQWN0aXZlQ2hhbm5lbExvY2tCeUlEL3tpZH0nLCBbQ2hhbm5lbExvY2tDb250cm9sbGVyOjpjbGFzcywgJ3JlQWN0aXZlQ2hhbm5lbExvY2tCeUlEJ10pOwogICAgUm91dGU6OmdldCgnZGVsZXRlQ2hhbm5lbExvY2tCeUlEL3tpZH0nLCBbQ2hhbm5lbExvY2tDb250cm9sbGVyOjpjbGFzcywgJ2RlbGV0ZUNoYW5uZWxMb2NrQnlJRCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEFsbENoYW5uZWxMb2NrJywgW0NoYW5uZWxMb2NrQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxDaGFubmVsTG9jayddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEFsbEFjdGl2ZUNoYW5uZWxMb2NrJywgW0NoYW5uZWxMb2NrQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxBY3RpdmVDaGFubmVsTG9jayddKTsKCiAgICAvLyBQYW5uZWwKICAgIFJvdXRlOjpwb3N0KCdhZGROZXdQYW5uZWwnLCBbUGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICdhZGROZXdQYW5uZWwnXSk7CiAgICBSb3V0ZTo6cG9zdCgnYWRkTmV3UGFubmVsTWFyemJhbicsIFtQYW5uZWxDb250cm9sbGVyOjpjbGFzcywgJ2FkZE5ld1Bhbm5lbE1hcnpiYW4nXSk7CiAgICBSb3V0ZTo6cG9zdCgnZWRpdE1hcnpiYW5QYW5uZWwnLCBbUGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICdlZGl0TWFyemJhblBhbm5lbCddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVQYW5uZWwnLCBbUGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVQYW5uZWwnXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZWxldGVQYW5uZWwve2lkfScsIFtQYW5uZWxDb250cm9sbGVyOjpjbGFzcywgJ2RlbGV0ZVBhbm5lbCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldFBhbm5lbHMnLCBbUGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRQYW5uZWxzJ10pOwogICAgUm91dGU6OmdldCgnZ2V0UGFubmVsQnlJZC97aWR9JywgW1Bhbm5lbENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0UGFubmVsQnlJZCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldFBhbm5lbEJ5SWRXaXRoUHJveGllc0luYm91bmRzL3tpZH0nLCBbUGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRQYW5uZWxCeUlkV2l0aFByb3hpZXNJbmJvdW5kcyddKTsKICAgIFJvdXRlOjpnZXQoJ2NyZWF0ZU1hcnpiYW5Vc2VyL3thY2NvdW50SWR9L3tkYXl9L3t2b2x9L3twYW5uZWxJRH0nLCBbUGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICdjcmVhdGVNYXJ6YmFuVXNlciddKTsKCiAgICAvLyBIaWRkaWZ5IFBhbmVsCgogICAgUm91dGU6OnBvc3QoJ2NoZWNrSGlkZGlmeVBhbmVsVXJsJywgW0hpZGRpZnlQYW5uZWxDb250cm9sbGVyOjpjbGFzcywgJ2NoZWNrSGlkZGlmeVBhbmVsVXJsJ10pOwogICAgUm91dGU6OnBvc3QoJ2FkZEhpZGRpZnlQYW5uZWwnLCBbSGlkZGlmeVBhbm5lbENvbnRyb2xsZXI6OmNsYXNzLCAnYWRkSGlkZGlmeVBhbm5lbCddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVIaWRkaWZ5UGFubmVsJywgW0hpZGRpZnlQYW5uZWxDb250cm9sbGVyOjpjbGFzcywgJ3VwZGF0ZUhpZGRpZnlQYW5uZWwnXSk7CiAgICBSb3V0ZTo6cG9zdCgnYWRkVXNlclRvSGlkZGlmeVBhbmVsJywgW0hpZGRpZnlQYW5uZWxDb250cm9sbGVyOjpjbGFzcywgJ2FkZFVzZXJUb0hpZGRpZnlQYW5lbCddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVVc2VyT2ZIaWRkaWZ5UGFuZWwnLCBbSGlkZGlmeVBhbm5lbENvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlVXNlck9mSGlkZGlmeVBhbmVsJ10pOwogICAgUm91dGU6OmdldCgnZGVsZXRlVXNlck9mSGlkZGlmeVBhbmVsL3twYW5uZWxJRH0ve3VzZXJVVUlEfScsIFtIaWRkaWZ5UGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICdkZWxldGVVc2VyT2ZIaWRkaWZ5UGFuZWwnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRIaWRkaWZ5UGFuZWxVc2Vyc0J5UGFubmVsSUQve3Bhbm5lbElEfScsIFtIaWRkaWZ5UGFubmVsQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRIaWRkaWZ5UGFuZWxVc2Vyc0J5UGFubmVsSUQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRIaWRkaWZ5UGFuZWxVc2VyQnlQYW5uZWxJRC97cGFubmVsSUR9L3t1c2VyVVVJRH0nLCBbSGlkZGlmeVBhbm5lbENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0SGlkZGlmeVBhbmVsVXNlckJ5UGFubmVsSUQnXSk7CgogICAgLy8gIFByb3h5CiAgICBSb3V0ZTo6cG9zdCgnYWRkTmV3UHJveHknLCBbUHJveHlDb250cm9sbGVyOjpjbGFzcywgJ2FkZE5ld1Byb3h5J10pOwogICAgUm91dGU6OnBvc3QoJ3VwZGF0ZVByb3h5JywgW1Byb3h5Q29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVQcm94eSddKTsKICAgIFJvdXRlOjpnZXQoJ2RlbGV0ZVByb3h5L3tpZH0nLCBbUHJveHlDb250cm9sbGVyOjpjbGFzcywgJ2RlbGV0ZVByb3h5J10pOwogICAgUm91dGU6OmdldCgncmVBY3RpdmVQcm94eS97aWR9JywgW1Byb3h5Q29udHJvbGxlcjo6Y2xhc3MsICdyZUFjdGl2ZVByb3h5J10pOwogICAgUm91dGU6OmdldCgnZGVBY3RpdmVQcm94eS97aWR9JywgW1Byb3h5Q29udHJvbGxlcjo6Y2xhc3MsICdkZUFjdGl2ZVByb3h5J10pOwogICAgUm91dGU6OmdldCgnZ2V0QWN0aXZlUHJveGllc0J5UGFubmVsSUQve3Bhbm5lbElEfScsIFtQcm94eUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWN0aXZlUHJveGllc0J5UGFubmVsSUQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRQcm94aWVzQnlQYW5uZWxJRC97cGFubmVsSUR9JywgW1Byb3h5Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRQcm94aWVzQnlQYW5uZWxJRCddKTsKCiAgICAvLyAgSW5ib3VuZAogICAgUm91dGU6OnBvc3QoJ2FkZEluYm91bmQnLCBbSW5ib3VuZENvbnRyb2xsZXI6OmNsYXNzLCAnYWRkSW5ib3VuZCddKTsKICAgIFJvdXRlOjpwb3N0KCd1cGRhdGVJbmJvdW5kJywgW0luYm91bmRDb250cm9sbGVyOjpjbGFzcywgJ3VwZGF0ZUluYm91bmQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdkZWxldGVJbmJvdW5kL3tpZH0nLCBbSW5ib3VuZENvbnRyb2xsZXI6OmNsYXNzLCAnZGVsZXRlSW5ib3VuZCddKTsKICAgIFJvdXRlOjpnZXQoJ3JlQWN0aXZlSW5ib3VuZC97aWR9JywgW0luYm91bmRDb250cm9sbGVyOjpjbGFzcywgJ3JlQWN0aXZlSW5ib3VuZCddKTsKICAgIFJvdXRlOjpnZXQoJ2RlQWN0aXZlSW5ib3VuZC97aWR9JywgW0luYm91bmRDb250cm9sbGVyOjpjbGFzcywgJ2RlQWN0aXZlSW5ib3VuZCddKTsKCiAgICAvLyAgQm90VXNlcgogICAgUm91dGU6OmdldCgnZ2V0Qm90VXNlckxpc3QnLCBbQm90VXNlckNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0Qm90VXNlckxpc3QnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRCb3RVc2VyTGlzdEJ5UGFnaW5hdGlvbicsIFtCb3RVc2VyQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRCb3RVc2VyTGlzdEJ5UGFnaW5hdGlvbiddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEJvdFVzZXJCeUlEL3tpZH0nLCBbQm90VXNlckNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0Qm90VXNlckJ5SUQnXSk7CiAgICBSb3V0ZTo6cG9zdCgnc2VhcmNoQm90VXNlcnMnLCBbQm90VXNlckNvbnRyb2xsZXI6OmNsYXNzLCAnc2VhcmNoX2JvdF91c2VycyddKTsKCiAgICBSb3V0ZTo6Z2V0KCdnZXRMYXN0MTBVc2VycycsIFtCb3RVc2VyQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRMYXN0MTBVc2VycyddKTsKICAgIFJvdXRlOjpnZXQoJ2dldFByb2R1Y3RCb3VnaHRlZEJ5UHJvZHVjdElkL3tpZH0nLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRCb3VnaHRQcm9kdWN0c1N0YXR1c0Zyb21TZXJ2ZXJCeUlkJ10pOwogICAgUm91dGU6OnBhdGNoKCdyZUNoYXJnZVByb2R1Y3RCeUFkbWluV2l0aFBySUQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdyZUNoYXJnZVByb2R1Y3RCeUFkbWluV2l0aFBySUQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRCb3VnaHRQcm9kdWN0c1Bhbm5lbExpbmtGcm9tU2VydmVyQnlJZEFkbWluTW9kZS97aWR9JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0Qm91Z2h0UHJvZHVjdHNQYW5uZWxMaW5rRnJvbVNlcnZlckJ5SWRBZG1pbk1vZGUnXSk7CiAgICBSb3V0ZTo6ZGVsZXRlKCdzb2Z0RGVsZXRlUHJvZHVjdEJ5QWdlbnRXaXRoUHJJREFkbWluTU9kZS97aWR9JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnc29mdERlbGV0ZVByb2R1Y3RCeUFnZW50V2l0aFBySURBZG1pbk1PZGUnXSk7CgoKICAgIC8vIExvZwogICAgUm91dGU6OmdldCgnZ2V0QWxsTG9ncy97Y291bnR9JywgW0xvZ0NvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWxsTG9ncyddKTsKCiAgICAvLyAgQWNjb3VudEJhbGxhbmNlQ29udHJvbGxlcgogICAgUm91dGU6OnBvc3QoJ3NldE5ld0FjY291bnRCYWxsYW5jZScsIFtBY2NvdW50QmFsbGFuY2VDb250cm9sbGVyOjpjbGFzcywgJ3NldE5ld0FjY291bnRCYWxsYW5jZSddKTsKICAgIFJvdXRlOjpwb3N0KCdzZXROZXdEb2xsYXJBY2NvdW50QmFsbGFuY2UnLCBbQWNjb3VudEJhbGxhbmNlQ29udHJvbGxlcjo6Y2xhc3MsICdzZXROZXdEb2xsYXJBY2NvdW50QmFsbGFuY2UnXSk7CiAgICBSb3V0ZTo6cHV0KCdpbmNyZWFzZVVzZXJBY2N1bnRCYWxhbmNlQnlVc2VySUQnLCBbQWNjb3VudEJhbGxhbmNlQ29udHJvbGxlcjo6Y2xhc3MsICdpbmNyZWFzZVVzZXJBY2N1bnRCYWxhbmNlQnlVc2VySUQnXSk7CiAgICBSb3V0ZTo6cHV0KCdkZWNyZWFzZVVzZXJBY2N1bnRCYWxhbmNlQnlVc2VySUQnLCBbQWNjb3VudEJhbGxhbmNlQ29udHJvbGxlcjo6Y2xhc3MsICdkZWNyZWFzZVVzZXJBY2N1bnRCYWxhbmNlQnlVc2VySUQnXSk7CgogICAgLy8gQXBwbGljYXRpb24KICAgIFJvdXRlOjpnZXQoJ2dldEFsbEFwbGljYXRpb25MaXN0JywgW0FwcGxpY2F0aW9uQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxBcGxpY2F0aW9uTGlzdCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEFsbEFjdGl2ZUFwbGljYXRpb25MaXN0JywgW0FwcGxpY2F0aW9uQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxBY3RpdmVBcGxpY2F0aW9uTGlzdCddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEFsbEFjdGl2ZUFwbGljYXRpb25MaXN0QnlPUy97b3N9JywgW0FwcGxpY2F0aW9uQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxBY3RpdmVBcGxpY2F0aW9uTGlzdEJ5T1MnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRBY3RpdmVBcGxpY2F0aW9uQnlOYW1lL3tuYW1lfScsIFtBcHBsaWNhdGlvbkNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWN0aXZlQXBsaWNhdGlvbkxpc3RCeU5hbWUnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRBY3RpdmVBcGxpY2F0aW9uQnlJRC97aWR9JywgW0FwcGxpY2F0aW9uQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRBY3RpdmVBcGxpY2F0aW9uTGlzdEJ5SUQnXSk7CiAgICBSb3V0ZTo6cG9zdCgnY3JlYXRlTmV3QXBwbGljYXRpb24nLCBbQXBwbGljYXRpb25Db250cm9sbGVyOjpjbGFzcywgJ2NyZWF0ZU5ld0FwcGxpY2F0aW9uJ10pOwogICAgUm91dGU6OnBvc3QoJ3VwZGF0ZUFwcGxpY2F0aW9uJywgW0FwcGxpY2F0aW9uQ29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVBcHBsaWNhdGlvbiddKTsKICAgIFJvdXRlOjpkZWxldGUoJ2RlbGV0ZUFwcGxpY2F0aW9uL3tpZH0nLCBbQXBwbGljYXRpb25Db250cm9sbGVyOjpjbGFzcywgJ2RlbGV0ZUFwcGxpY2F0aW9uJ10pOwoKICAgIC8vICBUZXN0QWNjb3VudENvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJ2dldFRlc3RBY2NvdW50RGV0YWlscycsIFtUZXN0QWNjb3VudENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0VGVzdEFjY291bnREZXRhaWxzJ10pOwogICAgUm91dGU6OnBvc3QoJ3VwZGF0ZVRlc3RBY2NvdW50RGV0YWlscycsIFtUZXN0QWNjb3VudENvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlVGVzdEFjY291bnREZXRhaWxzJ10pOwoKICAgIC8vIENyeXB0b1BheW1lbnRDb250cm9sbGVyCiAgICBSb3V0ZTo6Z2V0KCdnZXROb3ZQYXltZW50RGF0YScsIFtDcnlwdG9QYXltZW50Q29udHJvbGxlcjo6Y2xhc3MsICdnZXROb3ZQYXltZW50RGF0YSddKTsKICAgIFJvdXRlOjpwYXRjaCgndXBkYXRlTm93UGF5bWVudCcsIFtDcnlwdG9QYXltZW50Q29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVOb3dQYXltZW50J10pOwogICAgLy8gVHJhbnNhY3Rpb25TZXR0aW5nQ29udHJvbGxlcgogICAgUm91dGU6OmdldCgnZ2V0RG9sbG9yVHJhbnNhY3Rpb25TZXR0aW5nJywgW1RyYW5zYWN0aW9uU2V0dGluZ0NvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0RG9sbG9yVHJhbnNhY3Rpb25TZXR0aW5nJ10pOwogICAgUm91dGU6OnBhdGNoKCdzZXREb2xsb3JUcmFuc2FjdGlvblNldHRpbmcnLCBbVHJhbnNhY3Rpb25TZXR0aW5nQ29udHJvbGxlcjo6Y2xhc3MsICdzZXREb2xsb3JUcmFuc2FjdGlvblNldHRpbmcnXSk7CgogICAgLy8gQWdlbnRQcm9kdWN0Q29udHJvbGxlcgogICAgUm91dGU6OnBvc3QoJ2NyZWF0ZUJhdGNoT2ZVc2VyQWdlbnRQcm9kdWN0JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlQmF0Y2hPZlVzZXJBZ2VudFByb2R1Y3QnXSk7CiAgICBSb3V0ZTo6cG9zdCgncmVtb3ZlQWdlbnQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdyZW1vdmVBZ2VudCddKTsKICAgIFJvdXRlOjpwb3N0KCdvYnRhaW5CYXRjaE9mRXhpc3RQcm9kdWN0c1RvVXNlcicsIFtBZ2VudFByb2R1Y3RDb250cm9sbGVyOjpjbGFzcywgJ29idGFpbkJhdGNoT2ZFeGlzdFByb2R1Y3RzVG9Vc2VyJ10pOwogICAgUm91dGU6OnBvc3QoJ2RlbGV0ZUJhdGNoT2ZVc2VyQWdlbnRQcm9kdWN0JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZGVsZXRlQmF0Y2hPZlVzZXJBZ2VudFByb2R1Y3QnXSk7CiAgICBSb3V0ZTo6cG9zdCgnY3JlYXRlQU5ld0FnZW50UHJvZHVjdCcsIFtBZ2VudFByb2R1Y3RDb250cm9sbGVyOjpjbGFzcywgJ2NyZWF0ZUFOZXdBZ2VudFByb2R1Y3QnXSk7CiAgICBSb3V0ZTo6cGF0Y2goJ3VwZGF0ZUFnZW50UHJvZHVjdCcsIFtBZ2VudFByb2R1Y3RDb250cm9sbGVyOjpjbGFzcywgJ3VwZGF0ZUFnZW50UHJvZHVjdCddKTsKICAgIFJvdXRlOjpkZWxldGUoJ2RlbGV0ZUFnZW50UHJvZHVjdC97aWR9JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZGVsZXRlQWdlbnRQcm9kdWN0J10pOwogICAgUm91dGU6OmdldCgnZ2V0QWdlbnRQcm9kdWN0c0J5VXNlcklEL3t1c2VySUR9JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWdlbnRQcm9kdWN0c0J5VXNlcklEJ10pOwogICAgUm91dGU6OmdldCgnZ2V0QWdlbnRQcm9kdWN0c0J5SUQve0lEfScsIFtBZ2VudFByb2R1Y3RDb250cm9sbGVyOjpjbGFzcywgJ2dldEFnZW50UHJvZHVjdHNCeUlEJ10pOwoKICAgIC8vIEFnZW50UGVybWlzc29uQ29udHJvbGxlcgogICAgUm91dGU6OmdldCgnZ2V0VXNlclByZW1pc3Npb25CeUFnZW50SUQve0lEfScsIFtBZ2VudFBlcm1pc3NvbkNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0VXNlclByZW1pc3Npb25CeUFnZW50SUQnXSk7CiAgICBSb3V0ZTo6cG9zdCgnY3JlYXRlQU5ld0FnZW50UHJlbWlzc2lvbicsIFtBZ2VudFBlcm1pc3NvbkNvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlQU5ld0FnZW50UHJlbWlzc2lvbiddKTsKICAgIFJvdXRlOjpwYXRjaCgndXBkYXRlQWdlbnRQcmVtaXNzaW9uJywgW0FnZW50UGVybWlzc29uQ29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVBZ2VudFByZW1pc3Npb24nXSk7CiAgICBSb3V0ZTo6ZGVsZXRlKCdkZWxldGVBZ2VudFByZW1pc3Npb24ve2lkfScsIFtBZ2VudFBlcm1pc3NvbkNvbnRyb2xsZXI6OmNsYXNzLCAnZGVsZXRlQWdlbnRQcmVtaXNzaW9uJ10pOwoKICAgIC8vIENyb25Kb2JDb250cm9sbGVyCiAgICBSb3V0ZTo6Z2V0KCcvZ2V0QWxsQ3JvbkpvYnMnLCBbQ3JvbkpvYkNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0X2FsbF9jcm9uX2pvYnMnXSk7CiAgICBSb3V0ZTo6Z2V0KCcvZ2V0QWxsQWN0aXZlQ3JvbkpvYnMnLCBbQ3JvbkpvYkNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0X2FsbF9hY3RpdmVfY3Jvbl9qb2JzJ10pOwogICAgUm91dGU6OmdldCgnL2NoYW5nZUNyb25Kb2JBY3RpdmVTdGF0dXNCeUlkL3tpZH0nLCBbQ3JvbkpvYkNvbnRyb2xsZXI6OmNsYXNzLCAnY2hhbmdlX2Nyb25fam9iX2FjdGl2ZV9zdGF0dXMnXSk7CiAgICAvLyBSb3V0ZTo6Z2V0KCcvZ2V0VGV0aGVyUHJpY2VCeU5vYml0ZXgnLCBbQ3JvbkpvYkNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0X3RldGhlcl9wcmljZV9ieV9ub2JpdGV4J10pOwogICAgUm91dGU6OmdldCgnL2RhaWx5QmFja3VwJywgW0Nyb25Kb2JDb250cm9sbGVyOjpjbGFzcywgJ2V4ZWN1dGVfY3JlYXRlX2RhaWx5X2JhY2t1cCddKTsKICAgIFJvdXRlOjpnZXQoJy91c2FnZS1tb3JlLXRoYW4tODUtcGVyY2VudCcsIFtDcm9uSm9iQ29udHJvbGxlcjo6Y2xhc3MsICdleGVjdXRlX3NlbmRfdXNlYWdlX21vcmVfdGhhbl84NV9wZXJjZW50J10pOwogICAgUm91dGU6OmdldCgnL2F1dG8tZGVsZXRlLWV4cGlyZWQtY29uZmlncycsIFtDcm9uSm9iQ29udHJvbGxlcjo6Y2xhc3MsICdleGVjdXRlX2F1dG9fZGVsZXRlX2V4cGlyZWRfY29uZmlncyddKTsKICAgIFJvdXRlOjpnZXQoJy9sZXNzLXRoYW4tMy1kYXlzJywgW0Nyb25Kb2JDb250cm9sbGVyOjpjbGFzcywgJ2V4ZWN1dGVfc2VuZF9sYXNzX3RoZXJlX3RoYW5fM19kYXlzJ10pOwoKICAgIC8vIFJlZmVycmFsU2V0dGluZ0NvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJy9nZXRSZWZlcnJhbFNldHRpbmcnLCBbUmVmZXJyYWxTZXR0aW5nQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRfcmVmZXJyYWxfc2V0dGluZyddKTsKICAgIFJvdXRlOjpwdXQoJy91cGRhdGVSZWZlcnJhbFNldHRpbmcnLCBbUmVmZXJyYWxTZXR0aW5nQ29udHJvbGxlcjo6Y2xhc3MsICd1cGRhdGVfcmVmZXJyYWxfc2V0dGluZyddKTsKCiAgICAvLyAgUmVmZXJyYWxXYWxsZXRDb250cm9sbGVyCiAgICBSb3V0ZTo6cHV0KCcvZWRpdEFtb3VudE9mUmVmV2FsbGV0QnlBY2NvdW50SWQnLCBbUmVmZXJyYWxXYWxsZXRDb250cm9sbGVyOjpjbGFzcywgJ2VkaXRfYW1vdW50X29mX3JlZl93YWxsZXRfYnlfYWNjb3VudF9pZCddKTsKCiAgICAvLyBSZXNlcnZlcmRDb25maWdDb250cm9sbGVyCiAgICBSb3V0ZTo6cG9zdCgnL2NoZWNrQVByb2R1Y3RIYXNSZXNlcnZlZENvbmZpZ0J5UHJvZHVjdElkJywgW1Jlc2VydmVyZENvbmZpZ0NvbnRyb2xsZXI6OmNsYXNzLCAnY2hlY2tfYV9wcm9kdWN0X2hhc19yZXNlcnZlZF9jb25maWdfYnlfcHJvZHVjdF9pZCddKTsKCiAgICAvLyBBZHZhbmNlU2V0dGluZ0xvb2t1cENvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJy9hZHZhbmNlU2V0dGluZ0xvb2t1cCcsIFtBZHZhbmNlU2V0dGluZ0xvb2t1cENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWxsJ10pOwogICAgUm91dGU6OmdldCgnL2FkdmFuY2VTZXR0aW5nTG9va3VwQnlOYW1lL3tuYW1lfScsIFtBZHZhbmNlU2V0dGluZ0xvb2t1cENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QnlOYW1lJ10pOwogICAgUm91dGU6OmdldCgnL2FkdmFuY2VTZXR0aW5nTG9va3VwQnlOYW1lV2l0aEJvb2xlYW5WYWx1ZS97bmFtZX0nLCBbQWR2YW5jZVNldHRpbmdMb29rdXBDb250cm9sbGVyOjpjbGFzcywgJ2dldEJ5TmFtZVdpdGhCb29sZWFuVmFsdWUnXSk7CiAgICBSb3V0ZTo6Z2V0KCcvYWR2YW5jZVNldHRpbmdMb29rdXBCeU5hbWVBbmRWYWx1ZS97bmFtZX0ve3ZhbHVlfScsIFtBZHZhbmNlU2V0dGluZ0xvb2t1cENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QnlOYW1lQW5kVmFsdWUnXSk7CiAgICBSb3V0ZTo6Z2V0KCcvYWR2YW5jZVNldHRpbmdMb29rdXBCeVZhbHVlV2l0aEJvb2xlYW5WYWx1ZS97bmFtZX0nLCBbQWR2YW5jZVNldHRpbmdMb29rdXBDb250cm9sbGVyOjpjbGFzcywgJ2dldFZhbHVlQnlOYW1lV2l0aEJvb2xlYW5WYWx1ZSddKTsKICAgIFJvdXRlOjpnZXQoJy9yZXN0b3JlLWRlZmF1bHQtYWR2YW5jZWQtc2V0dGluZ3MnLCBbQWR2YW5jZVNldHRpbmdMb29rdXBDb250cm9sbGVyOjpjbGFzcywgJ3JlX3NlZWRfYWR2YW5jZV9zZXR0aW5nc19sb29rdXAnXSk7CgogICAgUm91dGU6OnBvc3QoJy9hZHZhbmNlU2V0dGluZ0xvb2t1cENyZWF0ZScsIFtBZHZhbmNlU2V0dGluZ0xvb2t1cENvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlJ10pOwogICAgUm91dGU6OnBvc3QoJy9hZHZhbmNlU2V0dGluZ0xvb2t1cFVwZGF0ZScsIFtBZHZhbmNlU2V0dGluZ0xvb2t1cENvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlJ10pOwogICAgUm91dGU6OnBvc3QoJy9hZHZhbmNlU2V0dGluZ0xvb2t1cFVwZGF0ZUJ5TmFtZScsIFtBZHZhbmNlU2V0dGluZ0xvb2t1cENvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlQnlOYW1lJ10pOwoKCiAgICAvLyBDdXN0b21UZXh0Q29udHJvbGxlcgogICAgUm91dGU6OmdldCgnL2dldC10ZXh0L3trZXl9JywgW0N1c3RvbVRleHRDb250cm9sbGVyOjpjbGFzcywgJ2dldFRleHQnXSk7CiAgICBSb3V0ZTo6cHV0KCcvc2V0LXRleHQve2tleX0ve3RleHR9JywgW0N1c3RvbVRleHRDb250cm9sbGVyOjpjbGFzcywgJ3NldFRleHQnXSk7CiAgICBSb3V0ZTo6cG9zdCgnL3NldC10ZXh0JywgW0N1c3RvbVRleHRDb250cm9sbGVyOjpjbGFzcywgJ3NldFRlc3QnXSk7CiAgICBSb3V0ZTo6Z2V0KCcvZ2V0LWFsbC10ZXh0cycsIFtDdXN0b21UZXh0Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRBbGxUZXh0cyddKTsKCiAgICAvLyBCbG9ja2VkVXNlckNvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJy9nZXQtYWxsLWJsb2NrZWQtdXNlcnMnLCBbQmxvY2tlZFVzZXJDb250cm9sbGVyOjpjbGFzcywgJ2dldEJsb2NrZWRVc2VyTGlzdCddKTsKICAgIFJvdXRlOjpwb3N0KCcvYWRkLWJsb2NrZWQtdXNlcicsIFtCbG9ja2VkVXNlckNvbnRyb2xsZXI6OmNsYXNzLCAnYWRkQmxvY2tlZFVzZXInXSk7CiAgICBSb3V0ZTo6cG9zdCgnL3JlbW92ZS1ibG9ja2VkLXVzZXInLCBbQmxvY2tlZFVzZXJDb250cm9sbGVyOjpjbGFzcywgJ3JlbW92ZUJsb2NrZWRVc2VyJ10pOwogICAgUm91dGU6OmdldCgnL2dldC1ibG9ja2VkLXVzZXInLCBbQmxvY2tlZFVzZXJDb250cm9sbGVyOjpjbGFzcywgJ2dldEJsb2NrZWRVc2VyJ10pOwogICAgUm91dGU6OmdldCgnL2lzLWJsb2NrZWQnLCBbQmxvY2tlZFVzZXJDb250cm9sbGVyOjpjbGFzcywgJ2lzQmxvY2tlZCddKTsKICAgIFJvdXRlOjpnZXQoJy9nZXQtYmxvY2tlZC11c2VyLWNvdW50JywgW0Jsb2NrZWRVc2VyQ29udHJvbGxlcjo6Y2xhc3MsICdnZXRCbG9ja2VkVXNlckNvdW50J10pOwp9KTsKUm91dGU6Omdyb3VwKFsnbWlkZGxld2FyZScgPT4gWydhdXRoOnNhbmN0dW0nLCAncmVzdHJpY3RSb2xlOmFnZW50J11dLCBmdW5jdGlvbiAoKSB7CiAgICAvLyBVc2VyCiAgICBSb3V0ZTo6cHV0KCd1cGRhdGVBZ2VudFBhc3N3b3JkJywgW1VzZXJDb250cm9sbGVyOjpjbGFzcywgJ3VwZGF0ZUFnZW50UGFzc3dvcmQnXSk7CgogICAgLy8gR2VuZXJhbENvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJ2dldEFnZW50RGFzaGJvYXJkQW5hbHl0aWNzJywgW0dlbmVyYWxDb250cm9sbGVyOjpjbGFzcywgJ2dldEFnZW50RGFzaGJvYXJkQW5hbHl0aWNzJ10pOwoKICAgIC8vIEFjY291bnRCYWxsYW5jZUNvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJ2dldExvZ2dlZEFnZW50VXNlckJhbGxhbmNjZScsIFtBY2NvdW50QmFsbGFuY2VDb250cm9sbGVyOjpjbGFzcywgJ2dldExvZ2dlZFVzZXJCYWxsYW5jY2UnXSk7CiAgICAvLyBBZ2VudFByb2R1Y3RDb250cm9sbGVyCiAgICBSb3V0ZTo6Z2V0KCdnZXRQcm9kdWN0c09mTG9nZ2VkQWdlbnQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRQcm9kdWN0c09mTG9nZ2VkQWdlbnQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRBZ2VudFNlbGxlZFByb2R1Y3RzJywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWdlbnRTZWxsZWRQcm9kdWN0cyddKTsKICAgIFJvdXRlOjpnZXQoJ2dldEFnZW50U2VsbGVkUHJvZHVjdHNCeVBhZ2luYXRpb24nLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRBZ2VudFNlbGxlZFByb2R1Y3RzQnlQYWdpbmF0aW9uJ10pOwogICAgUm91dGU6OmdldCgnZ2V0Qm91Z2h0UHJvZHVjdHNTdGF0dXNGcm9tU2VydmVyQnlJZC97aWR9JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0Qm91Z2h0UHJvZHVjdHNTdGF0dXNGcm9tU2VydmVyQnlJZCddKTsKICAgIFJvdXRlOjpwdXQoJ2J1eVByb2R1Y3RCeUFnZW50V2l0aFBySUQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdidXlQcm9kdWN0QnlBZ2VudFdpdGhQcklEJ10pOwogICAgUm91dGU6OnBhdGNoKCdyZW5hbWVIaWRkaWZ5UmVtYXJrJywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAncmVuYW1lSGlkZGlmeVJlbWFyayddKTsKICAgIFJvdXRlOjpwYXRjaCgncmVDaGFyZ2VQcm9kdWN0QnlBZ2VudFdpdGhQcklEJywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAncmVDaGFyZ2VQcm9kdWN0QnlBZ2VudFdpdGhQcklEJ10pOwogICAgUm91dGU6OnB1dCgnY2hhbmdlUHJvZHVjdEJ5QWdlbnRXaXRoUHJJRCcsIFtBZ2VudFByb2R1Y3RDb250cm9sbGVyOjpjbGFzcywgJ2NoYW5nZVByb2R1Y3RCeUFnZW50V2l0aFBySUQnXSk7CiAgICBSb3V0ZTo6ZGVsZXRlKCdzb2Z0RGVsZXRlUHJvZHVjdEJ5QWdlbnRXaXRoUHJJRC97aWR9JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnc29mdERlbGV0ZVByb2R1Y3RCeUFnZW50V2l0aFBySUQnXSk7Cn0pOwpSb3V0ZTo6Z3JvdXAoWydtaWRkbGV3YXJlJyA9PiBbJ2F1dGg6c2FuY3R1bScsICdyZXN0cmljdFJvbGU6dXNlciddXSwgZnVuY3Rpb24gKCkgewogICAgLy8gR2VuZXJhbENvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJ2dldFVzZXJEYXNoYm9hcmRBbmFseXRpY3MnLCBbR2VuZXJhbENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0VXNlckRhc2hib2FyZEFuYWx5dGljcyddKTsKCiAgICAvLyBBY2NvdW50QmFsbGFuY2VDb250cm9sbGVyCiAgICBSb3V0ZTo6Z2V0KCdnZXRMb2dnZWRVc2VyQmFsbGFuY2NlJywgW0FjY291bnRCYWxsYW5jZUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0TG9nZ2VkVXNlckJhbGxhbmNjZSddKTsKCiAgICAvLyBCaWxsQ29udHJvbGxlcgogICAgUm91dGU6OmdldCgnY3JlYXRlTmV3VXNlclRvbWFuQmlsbFVybC97YW1vdW50fScsIFtCaWxsQ29udHJvbGxlcjo6Y2xhc3MsICdjcmVhdGVOZXdBZ2VudFRvbWFuQmlsbFVybCddKTsKICAgIFJvdXRlOjpnZXQoJ2NyZWF0ZU5ld1VzZXJEb2xsYXJCaWxsVXJsL3thbW91bnR9JywgW0JpbGxDb250cm9sbGVyOjpjbGFzcywgJ2NyZWF0ZU5ld0FnZW50RG9sbGFyQmlsbFVybCddKTsKCiAgICAvLyBBZ2VudFByb2R1Y3RDb250cm9sbGVyCiAgICBSb3V0ZTo6cHV0KCdidXlQcm9kdWN0QnlVc2VyV2l0aFBySUQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdidXlQcm9kdWN0QnlVc2VyV2l0aFBySUQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRVc2VyU2VsbGVkUHJvZHVjdHNCeVBhZ2luYXRpb24nLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRBZ2VudFNlbGxlZFByb2R1Y3RzQnlQYWdpbmF0aW9uJ10pOwogICAgUm91dGU6OmdldCgnZ2V0UHJvZHVjdEJvdWdodGVkQnlQcm9kdWN0SWRVc2VyTW9kZS97aWR9JywgW0FnZW50UHJvZHVjdENvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0Qm91Z2h0UHJvZHVjdHNTdGF0dXNGcm9tU2VydmVyQnlJZCddKTsKICAgIFJvdXRlOjpwYXRjaCgncmVDaGFyZ2VQcm9kdWN0QnlVc2VyV2l0aFBySUQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdyZUNoYXJnZVByb2R1Y3RCeVVzZXJXaXRoUHJJRCddKTsKICAgIFJvdXRlOjpkZWxldGUoJ3NvZnREZWxldGVQcm9kdWN0QnlVc2VyV2l0aFBySUQve2lkfScsIFtBZ2VudFByb2R1Y3RDb250cm9sbGVyOjpjbGFzcywgJ3NvZnREZWxldGVQcm9kdWN0QnlVc2VyV2l0aFBySUQnXSk7Cn0pOwovLyBzaGFyZWQgcm91dGUKUm91dGU6Omdyb3VwKFsnbWlkZGxld2FyZScgPT4gWydhdXRoOnNhbmN0dW0nXV0sIGZ1bmN0aW9uICgpIHsKICAgIFJvdXRlOjpnZXQoJ2dldEJvdWdodFByb2R1Y3RzUGFubmVsTGlua0Zyb21TZXJ2ZXJCeUlkL3tpZH0nLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdnZXRCb3VnaHRQcm9kdWN0c1Bhbm5lbExpbmtGcm9tU2VydmVyQnlJZCddKTsKICAgIFJvdXRlOjpwb3N0KCdjaGFuZ2VBY3RpdmF0aW9uT2ZIaWRkaWZ5VXNlckJ5QWdlbnQnLCBbQWdlbnRQcm9kdWN0Q29udHJvbGxlcjo6Y2xhc3MsICdjaGFuZ2VBY3RpdmF0aW9uT2ZIaWRkaWZ5VXNlckJ5QWdlbnQnXSk7CiAgICBSb3V0ZTo6Z2V0KCdnZXRBZ2VudFBheW1lbnRXYXlzJywgW0dlbmVyYWxDb250cm9sbGVyOjpjbGFzcywgJ2dldEFnZW50UGF5bWVudFdheXMnXSk7CiAgICAvLyBCaWxsQ29udHJvbGxlcgogICAgUm91dGU6OmdldCgnY3JlYXRlTmV3QWdlbnRUb21hbkJpbGxVcmwve2Ftb3VudH0nLCBbQmlsbENvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlTmV3QWdlbnRUb21hbkJpbGxVcmwnXSk7CiAgICBSb3V0ZTo6Z2V0KCdjcmVhdGVOZXdBZ2VudERvbGxhckJpbGxVcmwve2Ftb3VudH0nLCBbQmlsbENvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlTmV3QWdlbnREb2xsYXJCaWxsVXJsJ10pOwoKICAgIC8vIFVzZXJDb250cm9sbGVyCiAgICBSb3V0ZTo6cHV0KCd1cGRhdGVVc2VyUGFzc3dvcmQnLCBbVXNlckNvbnRyb2xsZXI6OmNsYXNzLCAndXBkYXRlX2xvZ2dlZF9wYXNzd29yZCddKTsKICAgIC8vICBSZWZlcnJhbExvZ3NDb250cm9sbGVyCiAgICBSb3V0ZTo6Z2V0KCcvZ2V0UmVmZXJyYWxMb2dzQnlBY2NvdW50SWQve2FjY291bnRfaWR9JywgW1JlZmVycmFsTG9nc0NvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0X3JlZmVycmFsX2xvZ3MnXSk7CiAgICAvLyBXZWJBcHBNZW51SXRlbUNvbnRyb2xsZXIKICAgIFJvdXRlOjpnZXQoJy9nZXRBbGxBY3RpdmVXZWJBcHBNZW51SXRlbXMnLCBbV2ViQXBwTWVudUl0ZW1Db250cm9sbGVyOjpjbGFzcywgJ2dldF9hbGxfYWN0aXZlX3dlYl9hcHBfbWVudV9pdGVtcyddKTsKCiAgICAvL1Byb3h5Q29udHJvbGxlcgoKfSk7CgoKUm91dGU6OmdldCgnL2dldEFsbEFjdGl2ZVByb2RjdENhdGVnb3J5T3JkZXJCeVByaWNlJywgW1Byb2R1Y3RDYXRlZ29yeUNvbnRyb2xsZXI6OmNsYXNzLCAnZ2V0QWxsQWN0aXZlUHJvZGN0Q2F0ZWdvcnlPcmRlckJ5UHJpY2UnXSk7CgoKCgoKClJvdXRlOjpwb3N0KCdjcmVhdGVOZXdCaWxsSW5Eb2xsYXInLCBbQmlsbENvbnRyb2xsZXI6OmNsYXNzLCAnY3JlYXRlTmV3QmlsbEluRG9sbGFyJ10pOwpSb3V0ZTo6Z2V0KCcvb3JkZXInLCBbVHJhbnNhY3Rpb25Db250cm9sbGVyOjpjbGFzcywgJ29yZGVyJ10pOwpSb3V0ZTo6Z2V0KCcvb3JkZXJTdWNjZXNzJywgW1RyYW5zYWN0aW9uQ3J5cHRvQ29udHJvbGxlcjo6Y2xhc3MsICdvcmRlclN1Y2Nlc3MnXSk7ClJvdXRlOjpnZXQoJy9nZXRQYXltZW50U3RhdHVzL3tpZH0nLCBbVHJhbnNhY3Rpb25DcnlwdG9Db250cm9sbGVyOjpjbGFzcywgJ2dldFBheW1lbnRTdGF0dXMnXSk7CgpSb3V0ZTo6Z2V0KCcvcHJkJywgW0Nyb25Kb2JDb250cm9sbGVyOjpjbGFzcywgJ2NhbGN1bGF0ZV9wcm9kdWN0X2NhdGVnb3J5X3ByaWNlX2luX2RvbGxhcl9ieV90b21hbiddKTsKCgpSb3V0ZTo6cG9zdCgnL29yZGVyY2gnLCBbVHJhbnNhY3Rpb25Db250cm9sbGVyOjpjbGFzcywgJ2FkZF9vcmRlciddKTsKCgo=